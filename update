# ─────────────────────────────────────────────────── #
#                    ██ ▄█▀  ██████                   #
#                    ██▄█▒ ▒██    ▒                   #
#                   ▓███▄░ ░ ▓██▄                     #
#                   ▓██ █▄   ▒   ██▒                  #
#                   ▒██▒ █▄▒██████▒▒                  #
#                   ▒ ▒▒ ▓▒▒ ▒▓▒ ▒ ░                  #
#                   ░ ░▒ ▒░░ ░▒  ░ ░                  #
#                   ░ ░░ ░ ░  ░  ░                    #
#                   ░  ░         ░                    #
# ─────────────────────────────────────────────────── #
options:
#	KhCosmetics | crafted by Kick Holse
	version: 1.3

# PERMISSIONS
#
# khcs.<category>.<cosmetic/package>.<cosmetic>
# khcs.<category>.<cosmetic/package>.*
# khcs.<category>.*
# khcs.wardrobe
# khcs.*

#                  E  V  E  N  T  S                   #
# ─────────────────────────────────────────────────── #
join:
	kcs_stats(player)
	kcs_loadPerms(player)
	kcs_update(player)
quit:
	stopEffect id "khcs::cloaks::%player%"
	stopEffect id "khcs::players::%player%"
	loop all entities:
		name of loop-entity is kcs_petName(player):
			kill loop-entity
join: 
	while player is online:
		distance between {_loc} and player is higher than 0:
			set {_x} to {_x}
		else:
			stopEffect id "khcs::cloaks::%player%"
			set {_cloak} to yaml value "%uuid of player%.selected.cloaks" from file "plugins/KhCosmetics/players/%uuid of player%.yml"
			{_cloak} is not "":
				{_cloak} is "halloween_wing":
					drawWings style 12, particle1 "redstone", RGB 0, 0, 0, particle2 "redstone", RGB2 245, 122, 0, particle3 "redstone", RGB3 245, 122, 0, center player, id "khcs::cloaks::%player%", angle 110, height 0, space 0.2, visibleRange 30, tps 0, second 3
				{_cloak} is "green_wing":
					drawWings style 6, particle1 "redstone", RGB 0, 204, 102, particle2 "redstone", RGB2 2, 204, 0, particle3 "redstone", RGB3 51, 255, 0, center player, id "khcs::cloaks::%player%", angle 110, height 0, space 0.2, visibleRange 30, tps 0, second 3
				{_cloak} is "orange_wing":
					drawWings style 4, particle1 "redstone", RGB 255, 77, 0, particle2 "redstone", RGB2 255, 119, 61, particle3 "redstone", RGB3 255, 51, 0, center player, id "khcs::cloaks::%player%", angle 110, height 0, space 0.2, visibleRange 30, tps 0, second 3
				{_cloak} is "magenta_wing":
					drawWings style 7, particle1 "redstone", RGB 255, 0, 204, particle2 "redstone", RGB2 179, 0, 255, particle3 "redstone", RGB3 204, 102, 255, center player, id "khcs::cloaks::%player%", angle 110, height 0, space 0.2, visibleRange 30, tps 0, second 3
				{_cloak} is "blue_wing":
					drawWings style 12, particle1 "redstone", RGB 0, 184, 245, particle2 "redstone", RGB2 51, 102, 255, particle3 "redstone", RGB3 0, 0, 204, center player, id "khcs::cloaks::%player%", angle 110, height 0, space 0.2, visibleRange 30, tps 0, second 3
		set {_loc} to location of player
		wait 3 seconds
damage:
	loop all entities:
		loop all players:
			name of loop-entity-1 is kcs_petName(loop-player):
				cancel event
combust:
	name of event-entity is kcs_petName(player):
		cancel event
death:
	name of event-entity is kcs_petName(player):
		clear drops
rightclick on entity:
	name of event-entity is kcs_petName(player):
		cancel event
		make player ride clicked entity
		while vehicle of player is clicked entity:
			set {_loc} to block infront of player
			block infront of player's vehicle is not air or tall grass or long grass:
				block above block infront of player's vehicle is air:
					push player's vehicle upwards at speed 0.15
			push player's vehicle in horizontal direction of player at speed 0.06
			wait 1 tick
any move:
	stopEffect id "khcs::cloaks::%player%"
player world change:
	kcs_update(player)
click:
	event-item is deserializeItem(yaml value "options.item.icon" from "ks.cs.language", player):
		main_chest(player)

#               C  O  M  M  A  N  D  S                #
# ─────────────────────────────────────────────────── #
command cosmetics:
	trigger:
		main_chest(player)

#              F  U  N  C  T  I  O  N  S              #
# ─────────────────────────────────────────────────── #
function main_chest(p: Player, type: text="menu"):
	open chest inventory with yaml value "%{_type}%.rows" from "ks.cs.cosmetics/main" rows named yaml value "%{_type}%.title" from "ks.cs.cosmetics/main" to {_p}
	wait a tick
	loop yaml nodes with keys "%{_type}%.items" from "ks.cs.cosmetics/main":
		set {_loop} to loop-value
		set {_icon} to yaml value "%{_type}%.items.%{_loop}%.icon" from "ks.cs.cosmetics/main"
		set {_color} to "&c"
		set {_max} to 0
		{_loop} = "particles" or "cloaks" or "hats" or "animated_hats" or "banners" or "pets":
			loop yaml nodes with keys {_loop} from "ks.cs.cosmetics/%{_loop}%":
				set {_keys::*} to yaml nodes with keys "%{_loop}%.%loop-value-2%" from "ks.cs.cosmetics/%{_loop}%"
				{_keys::*} contains "packages":
					loop yaml nodes with keys "%{_loop}%.%loop-value-2%.packages" from "ks.cs.cosmetics/%{_loop}%":
						add 1 to {_max}
				else:
					add 1 to {_max}
			set {_contains} to size of yaml list "%uuid of {_p}%.cosmetics.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
			set {_selected} to yaml value "%uuid of {_p}%.selected.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
			{_selected} is "":
				set {_selected} to yaml value "%{_type}%.items.%{_loop}%.replaces.none" from "ks.cs.cosmetics/main"
			else:
				replace "%{_loop}%." with "" in {_selected}
				set {_selected} to yaml value "%loop-value%.%{_selected}%.name" from "ks.cs.cosmetics/%loop-value%"
			set {_percent} to (100/{_max})*{_contains}
			set {_percent} to "%{_percent}%"
			set {_percent} to first element of {_percent} split at "." parsed as int
			{_percent} >= 40:
				set {_color} to "&6"
			{_percent} = 100:
				set {_color} to "&a"
			set {_icon} to replacer "{list}" with {_selectesa} in yaml value "%{_type}%.items.%{_loop}%.icon" from "ks.cs.cosmetics/main"
		{_loop} = "clothes":
			loop "helmet" and "chestplate" and "leggings" and "boots":
				yaml value "%uuid of {_p}%.clothes.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" is not "":
					set {_lo} to yaml value "%uuid of {_p}%.clothes.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
					set {_lo} to first element of {_lo} split at " "
					set {_base} to yaml value "menu.replaces.name_item" from "ks.cs.cosmetics/clothes"
					replace "{item}" with yaml value "clothes.%last element of {_lo} split at ""_""%.%first element of {_lo} split at ""_""%.name" from "ks.cs.cosmetics/clothes" in {_base}
					replace "{piece}" with yaml value "clothes.%loop-value-2%.name" from "ks.cs.cosmetics/clothes" in {_base}
					add replacer "{part}" with "%{_base}%" in yaml value "menu.items.clothes.replaces.format" from "ks.cs.cosmetics/main" to {_selectesa::*}
			set {_selectesa} to replacer " and " and ", " with "\n" and "\n" in "%{_selectesa::*}%"
			size of {_selectesa::*} = 0:
				set {_selectesa} to yaml value "menu.items.clothes.replaces.none" from "ks.cs.cosmetics/main"
			set {_status} to yaml value "menu.items.clothes.replaces.permission" from "ks.cs.cosmetics/main"
			{_p} has permission "khcs.wardrobe" or "khcs.*":
				set {_status} to replacer "{list}" with {_selectesa} in yaml value "menu.items.clothes.replaces.view" from "ks.cs.cosmetics/main"
			set {_icon} to replacer "{status}" with {_status} in yaml value "menu.items.%{_loop}%.icon" from "ks.cs.cosmetics/main"
		
		{_loop} = "particles" or "cloaks" or "hats" or "animated_hats" or "banners" or "pets":
			set {_icon} to replacer "{max}" and "{have}" and "{color}" and "{percent}" and "{selected}" with "%{_max}%" and "%{_contains}%" and {_color} and "%{_percent}%" and {_selected} in {_icon}
		
		make a gui slot yaml value "%{_type}%.items.%{_loop}%.slot" from "ks.cs.cosmetics/main" of {_p} with deserializeItem({_icon}, {_p}) to run:
			{_loop} != "clothes" or "particles" or "cloaks" or "hats" or "animated_hats" or "banners" or "pets":
				{_loop} = "back":
					main_chest({_p})
				{_loop} = "heads" or "allpets":
					main_chest({_p}, "menu.%{_loop}%")
				stop
			{_loop} = "clothes":
				{_p} has permission "khcs.wardrobe" or "khcs.*":
					clothes_chest({_p})
			else:
				listing_chest({_p}, {_loop})
function listing_chest(p: Player, var: text, mode: text="", page: number = 0):
	set {_pageStart} to 21*{_page}
	set {_list::*} to yaml nodes with keys "%{_var}%" from "ks.cs.cosmetics/%{_var}%"
	{_mode} != "":
		set {_list::*} to yaml nodes with keys "%{_var}%.%{_mode}%.packages" from "ks.cs.cosmetics/%{_var}%"
	set {_i} to 1
	set {_rows} to 4
	set {_slot} to 10
	size of {_list::*} is between 8 and 14:
		set {_rows} to 5
	size of {_list::*} > 14:
		set {_rows} to 6
	open chest inventory with {_rows} rows named yaml value "menu.title" from "ks.cs.cosmetics/%{_var}%" to {_p}
	wait a tick
	yaml value "%uuid of {_p}%.selected.%{_var}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" != "":
		make a gui slot 9*{_rows}-6 of {_p} with deserializeItem(yaml value "menu.items.remove" from "ks.cs.cosmetics/%{_var}%", {_p}) to run:
			set yaml value "%uuid of {_p}%.selected.%{_var}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to ""
			kcs_update({_p})
			listing_chest({_p}, {_var}, "", {_page})
	make a gui slot 9*{_rows}-5 of {_p} with deserializeItem(yaml value "options.pagged.back" from "ks.cs.language", {_p}) to run:
		{_mode} != "":
			listing_chest({_p}, {_var}, "", {_page})
		else:
			{_var} = "animated_hats" or "hats" or "banners":
				main_chest({_p}, "menu.heads")
				stop
			{_var} = "pets":
				main_chest({_p}, "menu.allpets")
				stop
			main_chest({_p})

	(amount of {_list::*}) > {_pageStart} + 21:
		make a gui slot 9*{_rows}-1 of {_p} with deserializeItem(replacer "{next_page}" with "%{_page}+1+1%" in yaml value "options.pagged.next_page" from "ks.cs.language", {_p}) to run:
			listing_chest({_p}, {_var}, {_mode}, ({_page} + 1))
	{_page} > 0:
		make a gui slot 9*{_rows}-9 of {_p} with deserializeItem(replacer "{previous_page}" with "%{_page}+1-1%" in yaml value "options.pagged.previous_page" from "ks.cs.language", {_p}) to run:
			listing_chest({_p}, {_var}, {_mode}, ({_page} - 1))

	loop {_list::*}:
		(loop-index parsed as integer) > {_pageStart}
		set {_loop} to loop-value

		set {_ip} to "%{_var}%.%{_loop}%"
		{_mode} != "":
			set {_ip} to "%{_var}%.%{_mode}%.packages.%{_loop}%"

		set {_keys::*} to yaml nodes with keys "%{_ip}%" from "ks.cs.cosmetics/%{_var}%"
		{_keys::*} contains "packages":
			set {_icon} to yaml value "%{_ip}%.icon" from "ks.cs.cosmetics/%{_var}%"
			set {_name} to yaml value "%{_ip}%.name" from "ks.cs.cosmetics/%{_var}%"
			set {_lore} to replacer "{name}" with {_name} in yaml value "menu.replaces.packages" from "ks.cs.cosmetics/%{_var}%"
			set {_size} to size of yaml nodes with keys "%{_ip}%.packages" from "ks.cs.cosmetics/%{_var}%"
			
			clear {_xe::*}
			set {_xe} to 1
			loop yaml nodes with keys "%{_ip}%.packages" from "ks.cs.cosmetics/%{_var}%":
				{_xe} <= 7:
					set {_q} to yaml value "%{_ip}%.packages.%loop-value-2%.name" from "ks.cs.cosmetics/%{_var}%"
					add " &f▪ %{_q}%" to {_xe::*}
					add 1 to {_xe}

			make a gui slot {_slot} of {_p} with deserializeItem(replacer "{size}" and "{list}" with "%{_size}%" and replacer ", " and "and " with "\n" and "\n" in "%{_xe::*}%" in "%{_icon}% : nome>&a%{_name}% : desc>%{_lore}%", {_p}) without nbt to run:
				listing_chest({_p}, {_var}, {_loop})

		else:
			set {_icon} to yaml value "%{_ip}%.icon" from "ks.cs.cosmetics/%{_var}%"
			set {_name} to yaml value "%{_ip}%.name" from "ks.cs.cosmetics/%{_var}%"
			set {_lore} to replacer "{name}" with {_name} in yaml value "menu.replaces.lore" from "ks.cs.cosmetics/%{_var}%"
			set {_cos} to yaml value "%uuid of {_p}%.selected.%{_var}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
			set {_status} to yaml value "menu.replaces.not" from "ks.cs.cosmetics/%{_var}%"
			replace "%{_var}%.%{_mode}%.packages." with "" in {_cos}
			set {_x::*} to "hats" and "animated_hats" and "banners"
			remove "%{_var}%" from {_x::*}
			set {_color} to "&c"
			
			loop yaml list "%uuid of {_p}%.cosmetics.%{_var}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml":
				set {_12} to replacer "%{_ip}%" with "%{_loop}%" in "%loop-value-2%"
				{_12} is {_loop}:
					set {_status} to yaml value "menu.replaces.select" from "ks.cs.cosmetics/%{_var}%"
					set {_color} to "&a"

			{_cos} is {_loop}:
				set {_status} to yaml value "menu.replaces.selected" from "ks.cs.cosmetics/%{_var}%"
				set {_color} to "&6"
			{_color} = "&c":
				set {_icon} to "351:8"

			make a gui slot {_slot} of {_p} with deserializeItem(replacer "{status}" with {_status} in "%{_icon}% : nome>%{_color}%%{_name}% : desc>%{_lore}%", {_p}) without nbt to run:
				{_color} is "&a":
					set yaml value "%uuid of {_p}%.selected.%{_var}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to {_loop}
					{_mode} != "":
						set yaml value "%uuid of {_p}%.selected.%{_var}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to {_ip}
					loop {_x::*}:
						{_var} = "hats" or "animated_hats" or "banners"
						yaml value "%uuid of {_p}%.selected.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" is not "":
							set yaml value "%uuid of {_p}%.selected.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to ""
					set yaml value "%uuid of {_p}%.clothes.helmet" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to ""
					kcs_update({_p})
					listing_chest({_p}, {_var}, {_mode}, {_page})
					#send "&a[Colecionáveis] &aVocê equipou o cosmético &fApaixonado&a." to {_p}

		add 1 to {_slot}
		{_slot} is 17 or 26:
			add 2 to {_slot}
		{_slot} = ((35*{_i})):
			exit loop
function clothes_chest(p: Player, selected: text="helmet"):
	open chest inventory with 6 rows named yaml value "menu.title" from "ks.cs.cosmetics/clothes" to {_p}
	wait a tick
	set {_%{_selected}%-slot} to yaml value "clothes.%{_selected}%.slot" from "ks.cs.cosmetics/clothes"
	set {_%{_selected}%-slot} to {_%{_selected}%-slot} parsed as number
	set {_%{_selected}%-%{_p}%} to yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"

	make a gui slot 49 of {_p} with deserializeItem(yaml value "options.pagged.back" from "ks.cs.language", {_p}) to run:
		main_chest({_p})
	make a gui slot {_%{_selected}%-slot}-1 of {_p} with deserializeItem(replacer "{piece}" with yaml value "clothes.%{_selected}%.name" from "ks.cs.cosmetics/clothes" in yaml value "menu.items.selected_piece.icon" from "ks.cs.cosmetics/clothes", {_p})
	
	{_%{_selected}%-%{_p}%} is not "":
		make a gui slot 16 of {_p} with deserializeItem(yaml value "menu.items.remove.icon" from "ks.cs.cosmetics/clothes", {_p}) to run:
			set yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to ""
			clothes_chest({_p}, "%{_selected}%")
			kcs_update({_p})
		{_%{_selected}%-%{_p}%} contains "leather":
			make a gui slot 34 of {_p} with deserializeItem(yaml value "menu.items.paint.icon" from "ks.cs.cosmetics/clothes", {_p}) to run:
				paint_chest({_p}, "%{_selected}%")
		make a gui slot 25 of {_p} with deserializeItem(yaml value "menu.items.shiny.icon" from "ks.cs.cosmetics/clothes", {_p}) to run:
			{_%{_selected}%-%{_p}%} contains "encantar>":
				set yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to replacer " : encantar>sharpness:1" with "" in {_%{_selected}%-%{_p}%}
			else:
				set yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to "%{_%{_selected}%-%{_p}%}% : encantar>sharpness:1"
			clothes_chest({_p}, "%{_selected}%")
		kcs_update({_p})

	loop "helmet" and "chestplate" and "leggings" and "boots":
		set {_%loop-value%-%{_p}%} to yaml value "%uuid of {_p}%.clothes.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
		set {_%loop-value%-name} to yaml value "clothes.%loop-value%.name" from "ks.cs.cosmetics/clothes"
	set {_slot} to 12
	loop "helmet" and "chestplate" and "leggings" and "boots":
		{_selected} is loop-value:
			set {_item} to "%{_%{_selected}%-%{_p}%}% : nome>&a%{_%{_selected}%-name}%"
			{_%{_selected}%-%{_p}%} is "":
				set {_item} to "160:15 : nome>&a%{_%loop-value%-name}%"
			make a gui slot {_%{_selected}%-slot} of {_p} with deserializeItem({_item}, {_p}) without nbt
		else:
			set {_run} to loop-value
			set {_item} to "%{_%loop-value%-%{_p}%}% : nome>&c%{_%loop-value%-name}%"
			{_%loop-value%-%{_p}%} is "":
				set {_item} to "160:15 : nome>&c%{_%loop-value%-name}%"
			make a gui slot yaml value "clothes.%loop-value%.slot" from "ks.cs.cosmetics/clothes" of {_p} with deserializeItem({_item}, {_p}) without nbt to run:
				clothes_chest({_p}, {_run})
	loop yaml nodes with keys "clothes.%{_selected}%" from "ks.cs.cosmetics/clothes":
		loop-value is not "name" or "slot"
		set {_base} to yaml value "menu.replaces.name_item" from "ks.cs.cosmetics/clothes"
		replace "{item}" with yaml value "clothes.%{_selected}%.%loop-value%.name" from "ks.cs.cosmetics/clothes" in {_base}
		replace "{piece}" with "%{_%{_selected}%-name}%" in {_base}
		{_%{_selected}%-%{_p}%} contains "%loop-value%_%{_selected}%":
			set {_item} to replacer "{x}" with yaml value "menu.replaces.unselect" from "ks.cs.cosmetics/clothes" in "%loop-value%_%{_selected}% : nome>&6%{_base}% : desc>{x}"
			make a gui slot {_slot} of {_p} with deserializeItem({_item}, {_p}) without nbt to run:
				set yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to ""
				clothes_chest({_p}, "%{_selected}%")
				kcs_update({_p})
		else:
			set {_item} to replacer "{x}" with yaml value "menu.replaces.select" from "ks.cs.cosmetics/clothes" in "%loop-value%_%{_selected}% : nome>&a%{_base}% : desc>{x}"
			make a gui slot {_slot} of {_p} with deserializeItem({_item}, {_p}) without nbt to run:
				set yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to first element of {_item} split at " : "
				first element of {_item} split at " : " contains "helmet":
					loop "hats" and "animated_hats" and "banners":
						set yaml value "%uuid of {_p}%.selected.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to ""
				clothes_chest({_p}, "%{_selected}%")
				kcs_update({_p})
		add 1 to {_slot}
		{_slot} is 15:
			add 6 to {_slot}
function paint_chest(p: Player, selected: text="helmet"):
	open chest inventory with 6 rows named yaml value "paint.title" from "ks.cs.cosmetics/clothes" to {_p}
	wait a tick
	set {_slot} to 10

	set {_item} to yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
	make a gui slot 49 of {_p} with deserializeItem(yaml value "options.pagged.back" from "ks.cs.language", {_p}) to run:
		clothes_chest({_p}, {_selected})
	make a gui slot 48 of {_p} with deserializeItem(replacer "{item}" with {_item} in yaml value "paint.items.current_piece.icon" from "ks.cs.cosmetics/clothes", {_p}) without nbt
	
	loop yaml nodes with keys "paint.colors" from "ks.cs.cosmetics/clothes":
		set {_loop} to loop-value
		set {_name} to yaml value "paint.colors.%{_loop}%.name" from "ks.cs.cosmetics/clothes"
		set {_icon} to replacer "{color}" and "{item}" and "{name}" with replacer "_" with " " in {_loop} and {_item} and {_name} in yaml value "paint.icons" from "ks.cs.cosmetics/clothes"
		make a gui slot {_slot} of {_p} with deserializeItem({_icon}, {_p}) without nbt to run:
			set {_split::*} to {_item} split at " : "
			loop {_split::*}:
				loop-value-2 contains "encantar":
					set {_en} to loop-value-2
					set yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to "%{_split::1}% : %loop-value-2% : pintar>%{_loop}%"
					exit loop
				else:
					set {_x} to first element of {_item} split at " : "
					set yaml value "%uuid of {_p}%.clothes.%{_selected}%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to "%{_x}% : pintar>%{_loop}%"
			paint_chest({_p}, {_selected})
			kcs_update({_p})
		add 1 to {_slot}
		{_slot} is 17 or 26:
			add 2 to {_slot}

function kcs_stats(p: Player):
	fileExists("plugins/KhCosmetics/players/%uuid of {_p}%.yml") is not true:
		create file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
	set yaml value "%uuid of {_p}%.name" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to {_p}'s displayname
	set yaml value "%uuid of {_p}%.pet_name" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to khcore_text({_p}, yaml value "options.pets.default_name" from "ks.cs.language")
	loop "selected.banners" and "selected.hats" and "selected.animated_hats" and "selected.pets"  and "selected.cloaks" and "selected.particles" and "clothes.helmet" and "clothes.chestplate" and "clothes.leggings" and "clothes.boots":
		yaml value "%uuid of {_p}%.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" is not set:
			set yaml value "%uuid of {_p}%.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" to ""
	loop "cosmetics.banners" and "cosmetics.hats" and "cosmetics.animated_hats" and "cosmetics.pets"  and "cosmetics.cloaks" and "cosmetics.particles":
		add "x" to yaml list "%uuid of {_p}%.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
		remove "x" from yaml list "%uuid of {_p}%.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
function apply_emote(p: Player, x: text):
	emote "%{_x}%" parsed as emotetype on {_p} repeating 1000 times
function kcs_petName(p: Player) :: text:
	set {_x} to yaml value "%uuid of {_p}%.pet_name" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
	return "%{_x}%"
function kcs_loadPerms(p: Player):
	loop "hats" and "animated_hats" and "banners" and "particles" and "pets" and "cloaks":
		loop yaml list "%uuid of {_p}%.cosmetics.%loop-value%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml":
			remove loop-value-2 from yaml list "%uuid of {_p}%.cosmetics.%loop-value-1%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
		loop yaml nodes with keys "%loop-value-1%" from "ks.cs.cosmetics/%loop-value-1%":
			set {_x::*} to yaml nodes with keys "%loop-value-1%.%loop-value-2%" from "ks.cs.cosmetics/%loop-value-1%"
			{_x::*} contains "packages":
				loop yaml nodes with keys "%loop-value-1%.%loop-value-2%.packages" from "ks.cs.cosmetics/%loop-value-1%":
					{_p} has permission "khcs.*" or "khcs.%loop-value-1%.*" or "khcs.%loop-value-1%.%loop-value-2%.*" or "khcs.%loop-value-1%.%loop-value-2%.%loop-value-3%":
						add "%loop-value-1%.%loop-value-2%.packages.%loop-value-3%" to yaml list "%uuid of {_p}%.cosmetics.%loop-value-1%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
			else:
				{_p} has permission "khcs.*" or "khcs.%loop-value-1%.*" or "khcs.%loop-value-1%.%loop-value-2%":
					add loop-value-2 to yaml list "%uuid of {_p}%.cosmetics.%loop-value-1%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"

function kcs_update(p: Player, x: boolean=false):
	stop emote {_p}
	stopEffect id "khcs::cloaks::%{_p}%"
	stopEffect id "khcs::players::%{_p}%"
	set {_p}'s helmet to air
	set {_p}'s chestplate to air
	set {_p}'s leggings to air
	set {_p}'s boots to air
	loop all entities:
		name of loop-entity is kcs_petName({_p}):
			kill loop-entity
	loop yaml list "options.worlds" from "ks.cs.language":
		loop-value = "%{_p}'s world%":
			set slot yaml value "options.item.slot" from "ks.cs.language" of {_p} to deserializeItem(yaml value "options.item.icon" from "ks.cs.language", {_p})
			loop "banners" and "hats":
				yaml value "%uuid of {_p}%.selected.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" != "":
					set {_x} to yaml value "%uuid of {_p}%.selected.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
					replace "%loop-value-2%." with "" in {_x}
					set {_icon} to yaml value "%loop-value-2%.%{_x}%.icon" from "ks.cs.cosmetics/%loop-value-2%"
					set {_name} to yaml value "%loop-value-2%.%{_x}%.name" from "ks.cs.cosmetics/%loop-value-2%"
					set {_p}'s helmet to unbreakable deserializeItem("%{_icon}% : nome>&a%{_name}%", {_p}) without nbt
			loop "helmet" and "chestplate" and "leggings" and "boots":
				set {_item} to yaml value "%uuid of {_p}%.clothes.%loop-value-2%" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
				{_item} is not "":
					set {_name} to first element of {_item} split at "_"
					set {_base} to yaml value "menu.replaces.name_item" from "ks.cs.cosmetics/clothes"
					replace "{item}" with yaml value "clothes.%loop-value-2%.%{_name}%.name" from "ks.cs.cosmetics/clothes" in {_base}
					replace "{piece}" with yaml value "clothes.%loop-value-2%.name" from "ks.cs.cosmetics/clothes" in {_base}
					equip {_p} with unbreakable deserializeItem("%{_item}% : nome>&a%{_base}%", {_p}) without nbt
			set {_x} to yaml value "%uuid of {_p}%.selected.particles" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
			{_x} != "":
				drawSimpleHalo particle "%{_x}%", center {_p}, id "khcs::players::%{_p}%", rainbowMode false, visibleRange 32
			yaml value "%uuid of {_p}%.selected.animated_hats" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml" != "":
				set {_x} to yaml value "%uuid of {_p}%.selected.animated_hats" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
				{_x} contains "custom_":
					custom emote replacer "custom_" with "" in "%{_x}%" on {_p} repeating 1000 times
				else:
					apply_emote({_p}, {_x})
			set {_x} to yaml value "%uuid of {_p}%.selected.pets" from file "plugins/KhCosmetics/players/%uuid of {_p}%.yml"
			{_x} != "":
				spawn {_x} parsed as entitytype at {_p}
				set the display name of the spawned entity to kcs_petName({_p})
				while spawned entity is alive:
					loop all entities:
						name of loop-entity is kcs_petName({_p}):
							distance between {_p} and loop-entity is less than 10:
								distance between {_p} and loop-entity is bigger than 3:
									make loop-entity pathfind to location of {_p} with speed 1.3
								else if distance between {_p} and loop-entity is bigger than 10:
									teleport loop-entity to position of {_p}
								world of {_p} is not world of loop-entity:
									teleport loop-entity to position of {_p}
					wait 1 tick
  
#                     L  O  A  D                      #
# ─────────────────────────────────────────────────── #
load:
	loop "language" and "cosmetics/main" and "cosmetics/pets"  and "cosmetics/cloaks" and "cosmetics/clothes" and "cosmetics/banners" and "cosmetics/hats" and "cosmetics/animated_hats" and "cosmetics/particles":
		fileExists("plugins/KhCosmetics/%loop-value%.yml") != true:
			create file "plugins/KhCosmetics/%loop-value%.yml"
			delete file "plugins/KhCosmetics/%loop-value%.yml"
			download from "https://raw.githubusercontent.com/KickHolse/KhCosmetics/main/files/en/%loop-value%" to file "plugins/KhCosmetics/%loop-value%.yml"
		yaml "ks.cs.%loop-value%" is loaded:
			unload yaml "ks.cs.%loop-value%"
		load yaml "plugins/KhCosmetics/%loop-value%.yml" as "ks.cs.%loop-value%"
	text from "https://api.spigotmc.org/legacy/update.php?resource=76731" != "{@version}":
		send "[KhCosmetics] &cYou are not using the latest version of skript." to console
